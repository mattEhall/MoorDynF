function [Mesh1_I,Mesh1_O,Mesh2_I,Mesh2_O] = PlotFASTIOMeshes( Mesh1_Input, Mesh1_Output,Mesh2_Input,Mesh2_Output )
%%
%
Mesh1_I = ReadFASTmesh(Mesh1_Input);
Mesh1_O = ReadFASTmesh(Mesh1_Output);
Mesh2_I = ReadFASTmesh(Mesh2_Input);
Mesh2_O = ReadFASTmesh(Mesh2_Output);
%%

FieldNames = {'RefOrientation','Orientation','TranslationDisp',...
              'TranslationVel','RotationVel',...
              'TranslationAcc','RotationAcc',...
              'Force','Moment','Scalars' };
 
% npr = 2; %rows are values for each module:
% npc = 3; % 1) Reference, 2) Loads, 3) Motions
RefColor     = [1,1,1]*.5;
LoadsColor   = [0,.5,.5];
MotionsColor = [.5,0,.5];

ScaleSize = 0.5; %scaling factor for arrows on quiver plot
ForceSize = 1; %scaling factor for arrows on quiver plot

f=figure;

%% Plot Mod1 Reference
subplot(3,2,1) 
  hold on;  
  DrawMesh(Mesh1_O, RefColor, ScaleSize );   
  setAxisValues('\bfMesh1 Reference'); 
 
  
%% Plot Mod1 Loads and Motions
subplot(3,2,5)
    hold on;
    DrawMesh(Mesh1_O, RefColor, ScaleSize );   
    DrawMeshMotions(Mesh1_O, MotionsColor, ScaleSize )
    DrawMeshLoads(Mesh1_I, Mesh1_O, LoadsColor, ForceSize )
    setAxisValues('Mesh1: Calculated Inputs (Loads)'); 
  

subplot(3,2,3)
    hold on;
    DrawMesh(Mesh1_O, RefColor, ScaleSize );   
    DrawMeshMotions(Mesh1_O, MotionsColor, ScaleSize )
    setAxisValues('\bfMesh1: Outputs (Motions)'); 
    
    
%% Plot Mod2 Reference
subplot(3,2,2) 
  hold on;  
  DrawMesh(Mesh2_I, RefColor, ScaleSize );   
  setAxisValues('\bfMesh2 Reference');    
  
  
%% Plot Mod2 Loads
subplot(3,2,6)
    hold on;
    DrawMesh(Mesh2_I, RefColor, ScaleSize );   
    DrawMeshMotions(Mesh2_I, MotionsColor, ScaleSize )
    DrawMeshLoads(Mesh2_O, Mesh2_I, LoadsColor, ForceSize )
    setAxisValues('\bfMesh2: Outputs (Loads)'); 
      
subplot(3,2,4)
    hold on;
    DrawMesh(Mesh2_I, RefColor, ScaleSize );   
    DrawMeshMotions(Mesh2_I, MotionsColor, ScaleSize )
    setAxisValues('Mesh2: Calculated Inputs (Motions)'); 

return;
end % function

function setAxisValues(titleTxt)

    view(3)
    axis equal;
    camproj('perspective') 
%     if nargin>0
%         title(titleTxt)
%     end
    
%     cam_position = [-8.569092584074683, -15.604585706233514, 9.25154606662114];
%     cam_target   = [1.47276918226853,     0.15797987580299377, 0.9304439425468445];
%     cam_angle    = [9.38205048719499];
    
    
% maxValue = 10;
% minValue = -0.125;
    xlim([-5,5])
    ylim([-1,1])
    zlim([-2,3])
    grid on
            
%         axis vis3d ;

%         set(gca,'CameraPosition', cam_position,  ...
%                 'CameraTarget',   cam_target , ...
%                 'CameraViewAngle',cam_angle  );
    
    
return
end

function PlotField( Mesh, FieldName, MarkerColor, CoordSize)

    FieldValues = eval( ['Mesh.' FieldName] );
    
    [s1, s2, s3] = size(FieldValues);
    
    if( strcmpi(FieldName,'Orientation') || strcmpi(FieldName,'RefOrientation') )
        for iNode = 1:Mesh.Nnodes
            origin  = repmat(Mesh.Position(:,iNode),1,3);  %the origin of 3 vectors
            Field   = FieldValues(:,:,iNode);

                %multiply Field by CoordSize to make vectors a certain
                %length in meters:
            Field = Field*CoordSize;
            
            quiver3( origin(1,:),      origin(2,:),      origin(3,:),...
                      Field(1,:),       Field(2,:),       Field(3,:),...
                     0, ...        %no automatic scaling
                    'linewidth',2, 'MaxHeadSize',0.5,'AutoScale','Off','color',MarkerColor, ...
                    'DisplayName', [FieldName ', node ' num2str(iNode)] );                                    
            
        end % iNode

    else
        origin = Mesh.Position; 

            %multiply Field by CoordSize to make vectors a certain length
            %in meters:
        Field = FieldValues*CoordSize;
                                      
            quiver3( origin(1,:),      origin(2,:),      origin(3,:),...
                      Field(1,:),       Field(2,:),       Field(3,:),...
                     0, ...        %no automatic scaling
                    'linewidth',2, 'MaxHeadSize',0.5,'AutoScale','Off','color',MarkerColor, ...
                    'DisplayName', FieldName );                                    
                
        if strcmpi(FieldName,'Moment') % create two arrows for the moment
            % because I can't figure out how to make a better arrow (with 2
            % heads or 2 lines), I'm going to draw two arrows for the
            % moments:
            Field2 = Field*0.9;          
            
            quiver3( origin(1,:),      origin(2,:),      origin(3,:),...
                     Field2(1,:),      Field2(2,:),      Field2(3,:),...
                     0, ...        %no automatic scaling
                    'linewidth',3, 'MaxHeadSize',0.45,'AutoScale','Off','color',MarkerColor, ...
                    'DisplayName', FieldName );                                    
        end
                
    end
return;
end


 

